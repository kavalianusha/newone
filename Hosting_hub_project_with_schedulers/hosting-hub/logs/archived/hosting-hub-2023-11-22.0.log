2023-11-22 09:56:29,456 INFO  [restartedMain] org.springframework.boot.StartupInfoLogger.logStarting:51 Starting HostingHubApplication using Java 20.0.1 with PID 12136 (D:\HostingHub_WS\hosting-hub\target\classes started by Admin in D:\HostingHub_WS\hosting-hub)
2023-11-22 09:56:29,488 INFO  [restartedMain] org.springframework.boot.SpringApplication.logStartupProfileInfo:630 No active profile set, falling back to 1 default profile: "default"
2023-11-22 09:56:29,663 INFO  [restartedMain] org.springframework.boot.logging.DeferredLog.logTo:250 Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-22 09:56:29,663 INFO  [restartedMain] org.springframework.boot.logging.DeferredLog.logTo:250 For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-22 09:56:30,515 INFO  [restartedMain] org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:294 Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-22 09:56:30,515 INFO  [restartedMain] org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:138 Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-22 09:56:30,583 INFO  [restartedMain] org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:208 Finished Spring Data repository scanning in 58 ms. Found 6 JPA repository interfaces.
2023-11-22 09:56:30,876 INFO  [restartedMain] org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:294 Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-22 09:56:30,877 INFO  [restartedMain] org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:138 Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-11-22 09:56:30,901 INFO  [restartedMain] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:320 Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.hostinghub.repository.AdminRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-11-22 09:56:30,902 INFO  [restartedMain] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:320 Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.hostinghub.repository.DomainRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-11-22 09:56:30,902 INFO  [restartedMain] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:320 Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.hostinghub.repository.EmailRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-11-22 09:56:30,904 INFO  [restartedMain] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:320 Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.hostinghub.repository.HostDomainMapRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-11-22 09:56:30,905 INFO  [restartedMain] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:320 Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.hostinghub.repository.HostingRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-11-22 09:56:30,907 INFO  [restartedMain] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate:320 Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.example.hostinghub.repository.ItReturnsRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-11-22 09:56:30,912 INFO  [restartedMain] org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:208 Finished Spring Data repository scanning in 34 ms. Found 0 JDBC repository interfaces.
2023-11-22 09:56:31,695 INFO  [restartedMain] org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 Tomcat initialized with port(s): 8090 (http)
2023-11-22 09:56:31,708 INFO  [restartedMain] org.apache.juli.logging.DirectJDKLog.log:173 Initializing ProtocolHandler ["http-nio-8090"]
2023-11-22 09:56:31,709 INFO  [restartedMain] org.apache.juli.logging.DirectJDKLog.log:173 Starting service [Tomcat]
2023-11-22 09:56:31,710 INFO  [restartedMain] org.apache.juli.logging.DirectJDKLog.log:173 Starting Servlet engine: [Apache Tomcat/10.1.4]
2023-11-22 09:56:31,808 INFO  [restartedMain] org.apache.juli.logging.DirectJDKLog.log:173 Initializing Spring embedded WebApplicationContext
2023-11-22 09:56:31,810 INFO  [restartedMain] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext:291 Root WebApplicationContext: initialization completed in 2144 ms
2023-11-22 09:56:31,854 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource.getConnection:110 HikariPool-1 - Starting...
2023-11-22 09:56:32,026 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool.checkFailFast:565 HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@94f41b7
2023-11-22 09:56:32,027 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource.getConnection:123 HikariPool-1 - Start completed.
2023-11-22 09:56:32,036 INFO  [restartedMain] org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.logDataSources:88 H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/hostinghub'
2023-11-22 09:56:32,184 INFO  [restartedMain] org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation:31 HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-22 09:56:32,433 INFO  [restartedMain] org.hibernate.Version.logVersion:44 HHH000412: Hibernate ORM core version 6.1.6.Final
2023-11-22 09:56:32,597 WARN  [restartedMain] org.hibernate.boot.internal.MetadataBuilderImpl$MetadataBuildingOptionsImpl.lambda$new$1:626 HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
2023-11-22 09:56:32,746 INFO  [restartedMain] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.logSelectedDialect:66 HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-11-22 09:56:32,746 WARN  [restartedMain] org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.logSelectedDialect:73 HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2023-11-22 09:56:33,653 INFO  [restartedMain] org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService:51 HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-22 09:56:33,660 INFO  [restartedMain] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory:437 Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-22 09:56:34,908 WARN  [restartedMain] org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor:227 spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-22 09:56:35,426 WARN  [restartedMain] org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.checkTemplateLocationExists:101 Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2023-11-22 09:56:35,722 INFO  [restartedMain] org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:59 LiveReload server is running on port 35729
2023-11-22 09:56:35,783 INFO  [restartedMain] org.apache.juli.logging.DirectJDKLog.log:173 Starting ProtocolHandler ["http-nio-8090"]
2023-11-22 09:56:35,863 INFO  [restartedMain] org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start:220 Tomcat started on port(s): 8090 (http) with context path ''
2023-11-22 09:56:35,876 INFO  [restartedMain] org.springframework.boot.StartupInfoLogger.logStarted:57 Started HostingHubApplication in 7.525 seconds (process running for 8.281)
2023-11-22 09:56:50,097 INFO  [http-nio-8090-exec-1] org.apache.juli.logging.DirectJDKLog.log:173 Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-22 09:56:50,097 INFO  [http-nio-8090-exec-1] org.springframework.web.servlet.FrameworkServlet.initServletBean:532 Initializing Servlet 'dispatcherServlet'
2023-11-22 09:56:50,112 INFO  [http-nio-8090-exec-1] org.springframework.web.servlet.FrameworkServlet.initServletBean:554 Completed initialization in 15 ms
2023-11-22 09:56:55,918 INFO  [http-nio-8090-exec-2] com.example.hostinghub.service.AdminService.sendOtpByEmail:195 OTP sent successfully to: manasa@gmail.com
2023-11-22 09:56:55,991 INFO  [http-nio-8090-exec-2] com.example.hostinghub.service.AdminService.sendOtp:127  OTP for admin sent to the emailId or Username is : manasa@gmail.com null
2023-11-22 09:57:10,374 INFO  [http-nio-8090-exec-4] com.example.hostinghub.service.AdminService.verifyOtp:162 Login successful for admin
2023-11-22 09:58:20,038 INFO  [http-nio-8090-exec-7] com.example.hostinghub.service.AdminService.sendEmail:90 Password sent successfully to: sam@gmail.com
2023-11-22 09:58:20,121 INFO  [http-nio-8090-exec-7] com.example.hostinghub.service.AdminService.registerAdmin:76 Admin registration successful: sam@gmail.com
2023-11-22 09:58:22,745 INFO  [http-nio-8090-exec-8] com.example.hostinghub.service.AdminService.getAllAdmins:208 The size of the admin list is: 10
2023-11-22 09:58:22,746 INFO  [http-nio-8090-exec-8] com.example.hostinghub.service.AdminService.getAllAdmins:209 The retrieved admins are: [AdminEntity(adminId=AD001, name=sameera, userName=sameera, emailId=sam@gmail.com, password=sam, phoneNo=0987654321, role=hosting, otp=null), AdminEntity(adminId=AD002, name=allam, userName=anusha, emailId=anushak@pathbreakertech.in, password=anu, phoneNo=9789876654, role=email, otp=null), AdminEntity(adminId=AD003, name=manasa, userName=manasa, emailId=manasa@gmail.com, password=manasa, phoneNo=4556678798, role=admin, otp=null), AdminEntity(adminId=AD004, name=akianu, userName=anshika, emailId=anshika@gmail.com, password=arjunaki, phoneNo=9878567898, role=email, otp=null), AdminEntity(adminId=AD005, name=anusha, userName=kavali, emailId=akhilhjkk1234@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD006, name=anusha, userName=kavali, emailId=anusha@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD007, name=anusha, userName=kavali, emailId=kavali78998@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD008, name=anusha, userName=kavali, emailId=kavali098@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD009, name=anusha, userName=kavali, emailId=kavali0@gmail.com, password=allam, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD010, name=Naziya, userName=nasiya, emailId=naziyam@pathbreakertech.in, password=naziya, phoneNo=1234567890, role=admin, otp=null)]
2023-11-22 09:59:15,650 INFO  [http-nio-8090-exec-9] com.example.hostinghub.service.AdminService.getAllAdmins:208 The size of the admin list is: 10
2023-11-22 09:59:15,652 INFO  [http-nio-8090-exec-9] com.example.hostinghub.service.AdminService.getAllAdmins:209 The retrieved admins are: [AdminEntity(adminId=AD001, name=sameera, userName=sameera, emailId=sam@gmail.com, password=sam, phoneNo=0987654321, role=hosting, otp=null), AdminEntity(adminId=AD002, name=allam, userName=anusha, emailId=anushak@pathbreakertech.in, password=anu, phoneNo=9789876654, role=email, otp=null), AdminEntity(adminId=AD003, name=manasa, userName=manasa, emailId=manasa@gmail.com, password=manasa, phoneNo=4556678798, role=admin, otp=null), AdminEntity(adminId=AD004, name=akianu, userName=anshika, emailId=anshika@gmail.com, password=arjunaki, phoneNo=9878567898, role=email, otp=null), AdminEntity(adminId=AD005, name=anusha, userName=kavali, emailId=akhilhjkk1234@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD006, name=anusha, userName=kavali, emailId=anusha@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD007, name=anusha, userName=kavali, emailId=kavali78998@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD008, name=anusha, userName=kavali, emailId=kavali098@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD009, name=anusha, userName=kavali, emailId=kavali0@gmail.com, password=allam, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD010, name=Naziya, userName=nasiya, emailId=naziyam@pathbreakertech.in, password=naziya, phoneNo=1234567890, role=admin, otp=null)]
2023-11-22 09:59:18,028 INFO  [http-nio-8090-exec-10] com.example.hostinghub.service.AdminService.getAdminById:218 The size of the admin is: true
2023-11-22 09:59:18,029 INFO  [http-nio-8090-exec-10] com.example.hostinghub.service.AdminService.getAdminById:219 The retrieved admin is: Optional[AdminEntity(adminId=AD001, name=sameera, userName=sameera, emailId=sam@gmail.com, password=sam, phoneNo=0987654321, role=hosting, otp=null)]
2023-11-22 09:59:28,031 INFO  [http-nio-8090-exec-2] com.example.hostinghub.controller.AdminController.updateAdmin:124 The Admin details are updated successfully!! AD001
2023-11-22 09:59:29,604 INFO  [http-nio-8090-exec-3] com.example.hostinghub.service.AdminService.getAllAdmins:208 The size of the admin list is: 10
2023-11-22 09:59:29,604 INFO  [http-nio-8090-exec-3] com.example.hostinghub.service.AdminService.getAllAdmins:209 The retrieved admins are: [AdminEntity(adminId=AD001, name=sameera, userName=sameera, emailId=sam@gmail.com, password=sam, phoneNo=0987654329, role=hosting, otp=null), AdminEntity(adminId=AD002, name=allam, userName=anusha, emailId=anushak@pathbreakertech.in, password=anu, phoneNo=9789876654, role=email, otp=null), AdminEntity(adminId=AD003, name=manasa, userName=manasa, emailId=manasa@gmail.com, password=manasa, phoneNo=4556678798, role=admin, otp=null), AdminEntity(adminId=AD004, name=akianu, userName=anshika, emailId=anshika@gmail.com, password=arjunaki, phoneNo=9878567898, role=email, otp=null), AdminEntity(adminId=AD005, name=anusha, userName=kavali, emailId=akhilhjkk1234@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD006, name=anusha, userName=kavali, emailId=anusha@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD007, name=anusha, userName=kavali, emailId=kavali78998@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD008, name=anusha, userName=kavali, emailId=kavali098@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD009, name=anusha, userName=kavali, emailId=kavali0@gmail.com, password=allam, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD010, name=Naziya, userName=nasiya, emailId=naziyam@pathbreakertech.in, password=naziya, phoneNo=1234567890, role=admin, otp=null)]
2023-11-22 09:59:32,269 INFO  [http-nio-8090-exec-4] com.example.hostinghub.service.AdminService.getAdminById:218 The size of the admin is: true
2023-11-22 09:59:32,269 INFO  [http-nio-8090-exec-4] com.example.hostinghub.service.AdminService.getAdminById:219 The retrieved admin is: Optional[AdminEntity(adminId=AD001, name=sameera, userName=sameera, emailId=sam@gmail.com, password=sam, phoneNo=0987654329, role=hosting, otp=null)]
2023-11-22 09:59:34,811 INFO  [http-nio-8090-exec-5] com.example.hostinghub.service.AdminService.getAllAdmins:208 The size of the admin list is: 10
2023-11-22 09:59:34,811 INFO  [http-nio-8090-exec-5] com.example.hostinghub.service.AdminService.getAllAdmins:209 The retrieved admins are: [AdminEntity(adminId=AD001, name=sameera, userName=sameera, emailId=sam@gmail.com, password=sam, phoneNo=0987654329, role=hosting, otp=null), AdminEntity(adminId=AD002, name=allam, userName=anusha, emailId=anushak@pathbreakertech.in, password=anu, phoneNo=9789876654, role=email, otp=null), AdminEntity(adminId=AD003, name=manasa, userName=manasa, emailId=manasa@gmail.com, password=manasa, phoneNo=4556678798, role=admin, otp=null), AdminEntity(adminId=AD004, name=akianu, userName=anshika, emailId=anshika@gmail.com, password=arjunaki, phoneNo=9878567898, role=email, otp=null), AdminEntity(adminId=AD005, name=anusha, userName=kavali, emailId=akhilhjkk1234@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD006, name=anusha, userName=kavali, emailId=anusha@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD007, name=anusha, userName=kavali, emailId=kavali78998@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD008, name=anusha, userName=kavali, emailId=kavali098@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD009, name=anusha, userName=kavali, emailId=kavali0@gmail.com, password=allam, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD010, name=Naziya, userName=nasiya, emailId=naziyam@pathbreakertech.in, password=naziya, phoneNo=1234567890, role=admin, otp=null)]
2023-11-22 09:59:39,972 INFO  [http-nio-8090-exec-6] com.example.hostinghub.service.AdminService.getAdminById:218 The size of the admin is: true
2023-11-22 09:59:39,973 INFO  [http-nio-8090-exec-6] com.example.hostinghub.service.AdminService.getAdminById:219 The retrieved admin is: Optional[AdminEntity(adminId=AD001, name=sameera, userName=sameera, emailId=sam@gmail.com, password=sam, phoneNo=0987654329, role=hosting, otp=null)]
2023-11-22 09:59:41,910 INFO  [http-nio-8090-exec-7] com.example.hostinghub.service.AdminService.getAllAdmins:208 The size of the admin list is: 10
2023-11-22 09:59:41,910 INFO  [http-nio-8090-exec-7] com.example.hostinghub.service.AdminService.getAllAdmins:209 The retrieved admins are: [AdminEntity(adminId=AD001, name=sameera, userName=sameera, emailId=sam@gmail.com, password=sam, phoneNo=0987654329, role=hosting, otp=null), AdminEntity(adminId=AD002, name=allam, userName=anusha, emailId=anushak@pathbreakertech.in, password=anu, phoneNo=9789876654, role=email, otp=null), AdminEntity(adminId=AD003, name=manasa, userName=manasa, emailId=manasa@gmail.com, password=manasa, phoneNo=4556678798, role=admin, otp=null), AdminEntity(adminId=AD004, name=akianu, userName=anshika, emailId=anshika@gmail.com, password=arjunaki, phoneNo=9878567898, role=email, otp=null), AdminEntity(adminId=AD005, name=anusha, userName=kavali, emailId=akhilhjkk1234@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD006, name=anusha, userName=kavali, emailId=anusha@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD007, name=anusha, userName=kavali, emailId=kavali78998@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD008, name=anusha, userName=kavali, emailId=kavali098@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD009, name=anusha, userName=kavali, emailId=kavali0@gmail.com, password=allam, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD010, name=Naziya, userName=nasiya, emailId=naziyam@pathbreakertech.in, password=naziya, phoneNo=1234567890, role=admin, otp=null)]
2023-11-22 10:00:02,283 INFO  [http-nio-8090-exec-8] com.example.hostinghub.service.HostDomainMapService.getAllHostDomains:72 The size of the host domain mappers is 4 : 
2023-11-22 10:00:02,285 INFO  [http-nio-8090-exec-8] com.example.hostinghub.service.HostDomainMapService.getAllHostDomains:73 The retrieved host domain mappers are [HostDomainMapEntity(hostDomainId=HD002, domainName=manasa, hostProvider=mamatha, payment=899, registrationDate=12/10/2093, duration=2year, expiryDate=12/10/2095), HostDomainMapEntity(hostDomainId=HD003, domainName=Anushak, hostProvider=sree, payment=500, registrationDate=12/10/2023, duration=1year, expiryDate=12/10/2024), HostDomainMapEntity(hostDomainId=HD008, domainName=anu, hostProvider=saiesha, payment=300, registrationDate=2023-11-16, duration=3 months, expiryDate=2024-01-21), HostDomainMapEntity(hostDomainId=HD009, domainName=anu, hostProvider=saiesha, payment=700, registrationDate=2023-11-21, duration=3 months, expiryDate=2024-01-21)] : 
2023-11-22 10:00:11,807 INFO  [http-nio-8090-exec-1] com.example.hostinghub.service.HostDomainMapService.getAllHostDomains:72 The size of the host domain mappers is 4 : 
2023-11-22 10:00:11,807 INFO  [http-nio-8090-exec-1] com.example.hostinghub.service.HostDomainMapService.getAllHostDomains:73 The retrieved host domain mappers are [HostDomainMapEntity(hostDomainId=HD002, domainName=manasa, hostProvider=mamatha, payment=899, registrationDate=12/10/2093, duration=2year, expiryDate=12/10/2095), HostDomainMapEntity(hostDomainId=HD003, domainName=Anushak, hostProvider=sree, payment=500, registrationDate=12/10/2023, duration=1year, expiryDate=12/10/2024), HostDomainMapEntity(hostDomainId=HD008, domainName=anu, hostProvider=saiesha, payment=300, registrationDate=2023-11-16, duration=3 months, expiryDate=2024-01-21), HostDomainMapEntity(hostDomainId=HD009, domainName=anu, hostProvider=saiesha, payment=700, registrationDate=2023-11-21, duration=3 months, expiryDate=2024-01-21)] : 
2023-11-22 10:00:22,061 INFO  [http-nio-8090-exec-2] com.example.hostinghub.service.HostingService.getAllHosting:54 The size of the hosting is 1 : 
2023-11-22 10:00:22,062 INFO  [http-nio-8090-exec-2] com.example.hostinghub.service.HostingService.getAllHosting:56 Retrieved hosting information : [HostingEntity(hostingId=HA001, hostingProvider=saiesha, url=http://localhost:google, login=email, password=qwsdfg, registrationEmailId=anusak@pathbreakertech.in, registrationPhoneNumber=9765434567, registrationDomain=anusha, hostingPurchaDate=2023-11-24, hostingExpireDate=2024-11-03, hostingCpannelUrl=http://server:9090, hostingCpannelUserName=keerthi, hostingDnsName=ranilaxmi)] 
2023-11-22 10:00:31,004 INFO  [http-nio-8090-exec-3] com.example.hostinghub.service.EmailService.getAllEmails:107 The size of the emails is 1 : 
2023-11-22 10:00:31,005 INFO  [http-nio-8090-exec-3] com.example.hostinghub.service.EmailService.getAllEmails:108 The retrieved emails are : [EmailEntity(emailId=EM001, email=anushak@pathbreakertech.in, username=manasa, password=manasa)]
2023-11-22 10:00:39,779 INFO  [http-nio-8090-exec-4] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:00:39,779 INFO  [http-nio-8090-exec-4] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anusha, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=26-11-1999, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:04:19,356 INFO  [http-nio-8090-exec-7] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:04:19,356 INFO  [http-nio-8090-exec-7] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anusha, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=26-11-1999, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:04:24,842 INFO  [http-nio-8090-exec-8] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:04:24,842 INFO  [http-nio-8090-exec-8] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anusha, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=26-11-1999, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:04:42,025 INFO  [http-nio-8090-exec-9] com.example.hostinghub.service.ItReturnsService.getItReturnsByCustomerId:82 Retrieved IT return by customer ID CUST001. Retrieved IT return: ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anusha, createdDate=2023-11-20)
2023-11-22 10:04:48,048 INFO  [http-nio-8090-exec-1] com.example.hostinghub.service.ItReturnsService.updateItReturns:126 Before Update - Existing IT return: ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anusha, createdDate=2023-11-20)
2023-11-22 10:04:48,048 INFO  [http-nio-8090-exec-1] com.example.hostinghub.service.ItReturnsService.updateItReturns:132 After Update - Updated IT return: ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20)
2023-11-22 10:04:48,118 INFO  [http-nio-8090-exec-1] com.example.hostinghub.service.ItReturnsService.updateItReturns:138 Update successful for IT return CUST001. Updated IT return: ItReturnsUpdateRequest(serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak)
2023-11-22 10:04:49,726 INFO  [http-nio-8090-exec-2] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:04:49,727 INFO  [http-nio-8090-exec-2] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=26-11-1999, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:05:31,398 INFO  [http-nio-8090-exec-3] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:05:31,398 INFO  [http-nio-8090-exec-3] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=26-11-1999, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:09:53,436 INFO  [http-nio-8090-exec-5] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:09:53,437 INFO  [http-nio-8090-exec-5] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=26-11-1999, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:09:58,179 INFO  [http-nio-8090-exec-6] com.example.hostinghub.service.ItReturnsService.getItReturnsByCustomerId:82 Retrieved IT return by customer ID CUST001. Retrieved IT return: ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20)
2023-11-22 10:16:45,196 INFO  [http-nio-8090-exec-8] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:16:45,197 INFO  [http-nio-8090-exec-8] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=26-11-1999, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:16:48,482 INFO  [http-nio-8090-exec-9] com.example.hostinghub.service.ItReturnsService.getItReturnsByCustomerId:82 Retrieved IT return by customer ID CUST001. Retrieved IT return: ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20)
2023-11-22 10:16:58,133 INFO  [http-nio-8090-exec-10] com.example.hostinghub.service.ItReturnsService.updateItReturns:126 Before Update - Existing IT return: ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20)
2023-11-22 10:16:58,134 INFO  [http-nio-8090-exec-10] com.example.hostinghub.service.ItReturnsService.updateItReturns:132 After Update - Updated IT return: ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20)
2023-11-22 10:16:58,137 INFO  [http-nio-8090-exec-10] com.example.hostinghub.service.ItReturnsService.updateItReturns:138 Update successful for IT return CUST001. Updated IT return: ItReturnsUpdateRequest(serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak)
2023-11-22 10:17:04,642 INFO  [http-nio-8090-exec-1] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:17:04,643 INFO  [http-nio-8090-exec-1] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=26-11-1999, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:17:07,480 INFO  [http-nio-8090-exec-2] com.example.hostinghub.service.ItReturnsService.getItReturnsByCustomerId:82 Retrieved IT return by customer ID CUST002. Retrieved IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=26-11-1999, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:19:45,436 INFO  [http-nio-8090-exec-4] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:19:45,437 INFO  [http-nio-8090-exec-4] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=26-11-1999, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:19:47,946 INFO  [http-nio-8090-exec-5] com.example.hostinghub.service.ItReturnsService.getItReturnsByCustomerId:82 Retrieved IT return by customer ID CUST002. Retrieved IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=26-11-1999, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:19:55,483 INFO  [http-nio-8090-exec-7] com.example.hostinghub.service.ItReturnsService.updateItReturns:126 Before Update - Existing IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=26-11-1999, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:19:55,483 INFO  [http-nio-8090-exec-7] com.example.hostinghub.service.ItReturnsService.updateItReturns:132 After Update - Updated IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:19:55,491 INFO  [http-nio-8090-exec-7] com.example.hostinghub.service.ItReturnsService.updateItReturns:138 Update successful for IT return CUST002. Updated IT return: ItReturnsUpdateRequest(serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan)
2023-11-22 10:19:57,305 INFO  [http-nio-8090-exec-8] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:19:57,307 INFO  [http-nio-8090-exec-8] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:20:02,316 INFO  [http-nio-8090-exec-9] com.example.hostinghub.service.ItReturnsService.getItReturnsByCustomerId:82 Retrieved IT return by customer ID CUST002. Retrieved IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:20:10,147 INFO  [http-nio-8090-exec-10] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:20:10,147 INFO  [http-nio-8090-exec-10] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:20:12,563 INFO  [http-nio-8090-exec-1] com.example.hostinghub.service.ItReturnsService.getItReturnsByCustomerId:82 Retrieved IT return by customer ID CUST002. Retrieved IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:20:18,979 INFO  [http-nio-8090-exec-2] com.example.hostinghub.service.ItReturnsService.updateItReturns:126 Before Update - Existing IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=0000000, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:20:18,979 INFO  [http-nio-8090-exec-2] com.example.hostinghub.service.ItReturnsService.updateItReturns:132 After Update - Updated IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:20:18,985 INFO  [http-nio-8090-exec-2] com.example.hostinghub.service.ItReturnsService.updateItReturns:138 Update successful for IT return CUST002. Updated IT return: ItReturnsUpdateRequest(serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan)
2023-11-22 10:20:20,493 INFO  [http-nio-8090-exec-3] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:20:20,494 INFO  [http-nio-8090-exec-3] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:20:29,178 INFO  [http-nio-8090-exec-4] com.example.hostinghub.service.ItReturnsService.getItReturnsByCustomerId:82 Retrieved IT return by customer ID CUST001. Retrieved IT return: ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20)
2023-11-22 10:20:44,916 INFO  [http-nio-8090-exec-5] com.example.hostinghub.service.ItReturnsService.updateItReturns:126 Before Update - Existing IT return: ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20)
2023-11-22 10:20:44,916 INFO  [http-nio-8090-exec-5] com.example.hostinghub.service.ItReturnsService.updateItReturns:132 After Update - Updated IT return: ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20)
2023-11-22 10:20:44,916 INFO  [http-nio-8090-exec-5] com.example.hostinghub.service.ItReturnsService.updateItReturns:138 Update successful for IT return CUST001. Updated IT return: ItReturnsUpdateRequest(serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak)
2023-11-22 10:20:46,488 INFO  [http-nio-8090-exec-6] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:20:46,488 INFO  [http-nio-8090-exec-6] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:20:52,233 INFO  [http-nio-8090-exec-7] com.example.hostinghub.service.ItReturnsService.getItReturnsByCustomerId:82 Retrieved IT return by customer ID CUST002. Retrieved IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:21:31,881 INFO  [http-nio-8090-exec-8] com.example.hostinghub.service.ItReturnsService.getItReturnsByCustomerId:82 Retrieved IT return by customer ID CUST002. Retrieved IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:21:34,367 INFO  [http-nio-8090-exec-9] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:21:34,367 INFO  [http-nio-8090-exec-9] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:21:38,149 INFO  [http-nio-8090-exec-10] com.example.hostinghub.service.ItReturnsService.getItReturnsByCustomerId:82 Retrieved IT return by customer ID CUST002. Retrieved IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:21:50,549 INFO  [http-nio-8090-exec-1] com.example.hostinghub.service.ItReturnsService.updateItReturns:126 Before Update - Existing IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:21:50,549 INFO  [http-nio-8090-exec-1] com.example.hostinghub.service.ItReturnsService.updateItReturns:132 After Update - Updated IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:21:50,553 INFO  [http-nio-8090-exec-1] com.example.hostinghub.service.ItReturnsService.updateItReturns:138 Update successful for IT return CUST002. Updated IT return: ItReturnsUpdateRequest(serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan)
2023-11-22 10:21:55,684 INFO  [http-nio-8090-exec-2] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:21:55,684 INFO  [http-nio-8090-exec-2] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:21:58,245 INFO  [http-nio-8090-exec-3] com.example.hostinghub.service.ItReturnsService.getItReturnsByCustomerId:82 Retrieved IT return by customer ID CUST002. Retrieved IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:23:14,687 INFO  [http-nio-8090-exec-5] com.example.hostinghub.service.ItReturnsService.getItReturnsByCustomerId:82 Retrieved IT return by customer ID CUST002. Retrieved IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:23:24,920 INFO  [http-nio-8090-exec-6] com.example.hostinghub.service.ItReturnsService.updateItReturns:126 Before Update - Existing IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:23:24,920 INFO  [http-nio-8090-exec-6] com.example.hostinghub.service.ItReturnsService.updateItReturns:132 After Update - Updated IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:23:24,920 INFO  [http-nio-8090-exec-6] com.example.hostinghub.service.ItReturnsService.updateItReturns:138 Update successful for IT return CUST002. Updated IT return: ItReturnsUpdateRequest(serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan)
2023-11-22 10:23:26,664 INFO  [http-nio-8090-exec-7] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:23:26,664 INFO  [http-nio-8090-exec-7] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 10:23:34,680 INFO  [http-nio-8090-exec-8] com.example.hostinghub.service.ItReturnsService.getItReturnsByCustomerId:82 Retrieved IT return by customer ID CUST002. Retrieved IT return: ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)
2023-11-22 10:23:37,763 INFO  [http-nio-8090-exec-9] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 10:23:37,764 INFO  [http-nio-8090-exec-9] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 11:04:17,899 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool$HouseKeeper.run:804 HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=9m44s567ms461µs).
2023-11-22 11:14:18,517 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool$HouseKeeper.run:804 HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m30s478ms144µs500ns).
2023-11-22 11:28:00,910 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool$HouseKeeper.run:804 HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m42s215ms753µs700ns).
2023-11-22 12:07:05,896 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool$HouseKeeper.run:804 HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=35m4s915ms805µs99ns).
2023-11-22 12:33:52,004 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool$HouseKeeper.run:804 HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m45s807ms162µs).
2023-11-22 12:42:15,427 INFO  [http-nio-8090-exec-1] com.example.hostinghub.service.AdminService.registerAdmin:53 Email already exists in the db: anushak@pathbreakertech.in
2023-11-22 12:42:28,148 INFO  [http-nio-8090-exec-4] com.example.hostinghub.service.AdminService.sendEmail:90 Password sent successfully to: anushakk@pathbreakertech.in
2023-11-22 12:42:28,233 INFO  [http-nio-8090-exec-4] com.example.hostinghub.service.AdminService.registerAdmin:76 Admin registration successful: anushakk@pathbreakertech.in
2023-11-22 13:07:36,638 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool$HouseKeeper.run:804 HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m14s143ms463µs800ns).
2023-11-22 13:56:18,381 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool$HouseKeeper.run:804 HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=36m11s526ms15µs300ns).
2023-11-22 15:15:04,994 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool$HouseKeeper.run:804 HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=9m15s575ms68µs300ns).
2023-11-22 15:26:05,354 WARN  [http-nio-8090-exec-7] com.example.hostinghub.controller.AdminController.sendOtp:60 error on login: query did not return a unique result: 2
org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:382)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy4/jdk.proxy4.$Proxy114.findByEmailIdOrUserName(Unknown Source)
	at com.example.hostinghub.service.AdminService.sendOtp(AdminService.java:95)
	at com.example.hostinghub.controller.AdminController.sendOtp(AdminController.java:50)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1080)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:973)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1010)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:913)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:884)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:814)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:223)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:158)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:859)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1734)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
Caused by: jakarta.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:466)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.getSingleResult(QuerySqmImpl.java:1103)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:193)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:90)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:148)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:77)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 57 common frames omitted
2023-11-22 15:26:35,309 INFO  [http-nio-8090-exec-8] com.example.hostinghub.service.AdminService.sendOtpByEmail:195 OTP sent successfully to: manasa@gmail.com
2023-11-22 15:26:35,388 INFO  [http-nio-8090-exec-8] com.example.hostinghub.service.AdminService.sendOtp:127  OTP for admin sent to the emailId or Username is : null manasa
2023-11-22 15:26:53,170 INFO  [http-nio-8090-exec-10] com.example.hostinghub.service.AdminService.verifyOtp:162 Login successful for admin
2023-11-22 15:27:20,913 INFO  [http-nio-8090-exec-2] com.example.hostinghub.service.ItReturnsService.getAllItReturns:114 The size of the it retruns list is: 2
2023-11-22 15:27:20,913 INFO  [http-nio-8090-exec-2] com.example.hostinghub.service.ItReturnsService.getAllItReturns:115 The retrieved it returns are: [ItReturnsEntity(customerId=CUST001, serviceType=login, registeredEmail=login@gmail.com, registeredMobileNo=0987654321, registeredDate=2023-11-08, loginUrl=www.login.com, userName=anusha, password=anu, createdBy=anushak, createdDate=2023-11-20), ItReturnsEntity(customerId=CUST002, serviceType=service1, registeredEmail=charan@gmail.com, registeredMobileNo=7396179727, registeredDate=2023-11-23, loginUrl=www.an.com, userName=charan29, password=anusha, createdBy=charan, createdDate=2023-11-20)]
2023-11-22 15:52:27,455 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool$HouseKeeper.run:804 HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=20m52s157ms442µs200ns).
2023-11-22 16:22:47,599 INFO  [http-nio-8090-exec-4] com.example.hostinghub.service.AdminService.getAllAdmins:208 The size of the admin list is: 10
2023-11-22 16:22:47,600 INFO  [http-nio-8090-exec-4] com.example.hostinghub.service.AdminService.getAllAdmins:209 The retrieved admins are: [AdminEntity(adminId=AD001, name=kavali, userName=anusha, emailId=anushakk@pathbreakertech.in, password=anusha, phoneNo=9789876654, role=email, otp=null), AdminEntity(adminId=AD002, name=allam, userName=anusha, emailId=anushak@pathbreakertech.in, password=anu, phoneNo=9789876654, role=email, otp=null), AdminEntity(adminId=AD003, name=manasa, userName=manasa, emailId=manasa@gmail.com, password=manasa, phoneNo=4556678798, role=admin, otp=null), AdminEntity(adminId=AD004, name=akianu, userName=anshika, emailId=anshika@gmail.com, password=arjunaki, phoneNo=9878567898, role=email, otp=null), AdminEntity(adminId=AD005, name=anusha, userName=kavali, emailId=akhilhjkk1234@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD006, name=anusha, userName=kavali, emailId=anusha@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD007, name=anusha, userName=kavali, emailId=kavali78998@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD008, name=anusha, userName=kavali, emailId=kavali098@gmail.com, password=anusha, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD009, name=anusha, userName=kavali, emailId=kavali0@gmail.com, password=allam, phoneNo=9700676453, role=email, otp=null), AdminEntity(adminId=AD010, name=Naziya, userName=nasiya, emailId=naziyam@pathbreakertech.in, password=naziya, phoneNo=1234567890, role=admin, otp=null)]
2023-11-22 17:17:33,824 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool$HouseKeeper.run:804 HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m35s52ms827µs500ns).
2023-11-22 17:30:33,901 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool$HouseKeeper.run:804 HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m59s975ms160µs800ns).
2023-11-22 19:18:35,938 WARN  [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool$HouseKeeper.run:804 HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m546ms677µs200ns).
2023-11-22 19:37:18,151 INFO  [SpringApplicationShutdownHook] org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy:650 Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-22 19:37:18,168 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource.close:350 HikariPool-1 - Shutdown initiated...
2023-11-22 19:37:18,178 INFO  [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource.close:352 HikariPool-1 - Shutdown completed.
